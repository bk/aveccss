// Dropdown: <details role="menu"> with <summary> and <ul> as direct children
// (The HTML markup is very similar to PicoCSS' implementation)
// For backward compatibility, role="dropdown" is also supported although that
// is not on the list of valid ARIA role names.

details[role="dropdown"], details[role="menu"] {
    position: relative;
    padding: var(--spacing);
    margin-bottom: var(--spacing);
    // summary = The label on the dropdown
    > summary {
        font-weight: inherit;
        list-style-type: none;
        margin: 0;
        padding: 0 1.15rem 0 0;
        &::after {
            position: absolute;
            right: .75rem;
            content: "â–¼";
            font-size: .75em;
            margin-top: .33em;
        }
        &[role="button"] {
            margin: calc(var(--spacing) * -1);
            padding: var(--spacing) calc(var(--spacing) * 3) var(--spacing) calc(var(--spacing) * 2);
            line-height: 1.25;
        }
        // list-style-type:none should remove the marker in front,
        // but it does not work on Webkit browsers
        &::-webkit-details-marker {
            display: none;
        }
    }
    @if not ($classless) {
      &.active > summary {
        font-weight: bold;
      }
    }
    // ul = The list (normally, of links) in the dropdown
    > ul {
        position: absolute;
        z-index: 99;
        min-width: 100%;
        top: auto;
        left: 0;
        @if not ($classless) {
          &.rightset {
            left: auto;
            right: 0;
          }
        }
        display: flex;
        flex-direction: column;
        margin: var(--spacing) 0 0 0;
        padding: 0;
        border: 1px solid var(--border);
        border-radius: var(--border-radius);
        background: var(--accent-bg);
        box-shadow: var(--box-shadow);
        > li {
            margin: 0;
            list-style: none;
            padding: calc(var(--spacing) * 0.25) var(--spacing);
            text-align: left;
            white-space: nowrap;
            @if ($classless) {
              &:hover {
                background: var(--contrast-bg);
              }
            } else {
              &:hover, &.active {
                background: var(--contrast-bg);
              }
            }
            a {
                text-decoration: none;
            }
            &:first-child {
                padding-top: calc(var(--spacing) * 0.5);
            }
            &:last-child {
                padding-bottom: calc(var(--spacing) * 0.5);
            }
        }
    }
}

// Dropdowns will presumably be used primarily in nav bars.
// In that context, they should look like links.
nav details[role="dropdown"],
nav details[role="menu"] {
    margin: 0;
    padding: 0;
    background: transparent;
    border: none;
    color: var(--accent);
    > summary {
        &::after {
            right: .15rem;
        }
        &[role="button"] {
            position: relative;
            margin: 0;
            &::after {
                right: .75rem;
            }
        }
    }
    > ul {
        margin: 0;
    }
}
